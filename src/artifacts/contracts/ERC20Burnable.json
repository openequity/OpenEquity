{
  "contractName": "ERC20Burnable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Extension of `ERC20` that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See `ERC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ERC20._burnFrom`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/E/Task_space/Elena/2Backend/contracts/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Task_space/Elena/2Backend/contracts/ERC20.sol\":{\"keccak256\":\"0x75929a878fc5f9587643b6877e472ed72b820b7f2e5bd7a91d3be30aab5e54c8\",\"urls\":[\"bzzr://111073a43a067a152575dce577b2163556009592733e06ef26f0a5ab53e64c05\"]},\"/E/Task_space/Elena/2Backend/contracts/ERC20Burnable.sol\":{\"keccak256\":\"0x60e3850c4ed7c530293937859759f057276f017419a4032d803a868fcca5be0d\",\"urls\":[\"bzzr://37bdc7153358f9d2f82a37559a70cad9cf99c8364e9eb17de411d8cc2ced862a\"]},\"/E/Task_space/Elena/2Backend/contracts/IERC20.sol\":{\"keccak256\":\"0x5b185339d0d372fc6ce6fcc1b57bd9bdc893026ba43745bf00de23cc9605595b\",\"urls\":[\"bzzr://2eea795b0c3b747f996d59cb1fa32d9e6801184a061bb9b0a8bc5ae0b2d87797\"]},\"/E/Task_space/Elena/2Backend/contracts/SafeMath.sol\":{\"keccak256\":\"0xf569fc2f5b2aeab257caf413966746a267fe7e478e3226ae877d249de77b91c6\",\"urls\":[\"bzzr://10615c37e61357ee71ecde7ea9a688e770a88fee20cfddfc9bce43203e971b32\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109b6806100206000396000f3fe6080604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100a857806318160ddd146100f557806323b872dd1461011c578063395093511461015f57806342966c681461019857806370a08231146101c457806379cc6790146101f7578063a457c2d714610230578063a9059cbb14610269578063dd62ed3e146102a2575b600080fd5b3480156100b457600080fd5b506100e1600480360360408110156100cb57600080fd5b50600160a060020a0381351690602001356102dd565b604080519115158252519081900360200190f35b34801561010157600080fd5b5061010a6102f3565b60408051918252519081900360200190f35b34801561012857600080fd5b506100e16004803603606081101561013f57600080fd5b50600160a060020a038135811691602081013590911690604001356102f9565b34801561016b57600080fd5b506100e16004803603604081101561018257600080fd5b50600160a060020a038135169060200135610350565b3480156101a457600080fd5b506101c2600480360360208110156101bb57600080fd5b503561038c565b005b3480156101d057600080fd5b5061010a600480360360208110156101e757600080fd5b5035600160a060020a0316610399565b34801561020357600080fd5b506101c26004803603604081101561021a57600080fd5b50600160a060020a0381351690602001356103b4565b34801561023c57600080fd5b506100e16004803603604081101561025357600080fd5b50600160a060020a0381351690602001356103c2565b34801561027557600080fd5b506100e16004803603604081101561028c57600080fd5b50600160a060020a0381351690602001356103fe565b3480156102ae57600080fd5b5061010a600480360360408110156102c557600080fd5b50600160a060020a038135811691602001351661040b565b60006102ea338484610436565b50600192915050565b60025490565b60006103068484846105a3565b600160a060020a038416600090815260016020908152604080832033808552925290912054610346918691610341908663ffffffff61076716565b610436565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102ea918590610341908663ffffffff6107c716565b610396338261082b565b50565b600160a060020a031660009081526020819052604090205490565b6103be8282610945565b5050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102ea918590610341908663ffffffff61076716565b60006102ea3384846105a3565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03831615156104bb576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610541576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383161515610629576040805160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156106af576040805160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152602081905260409020546106d8908263ffffffff61076716565b600160a060020a03808516600090815260208190526040808220939093559084168152205461070d908263ffffffff6107c716565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107c1576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610824576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a03821615156108b1576040805160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6002546108c4908263ffffffff61076716565b600255600160a060020a0382166000908152602081905260409020546108f0908263ffffffff61076716565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b61094f828261082b565b600160a060020a0382166000908152600160209081526040808320338085529252909120546103be918491610341908563ffffffff6107671656fea165627a7a72305820eac7cca2272fe806a9048042f2b68f8971485149ddb528efc6d81f8a277a1ce70029",
  "deployedBytecode": "0x6080604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100a857806318160ddd146100f557806323b872dd1461011c578063395093511461015f57806342966c681461019857806370a08231146101c457806379cc6790146101f7578063a457c2d714610230578063a9059cbb14610269578063dd62ed3e146102a2575b600080fd5b3480156100b457600080fd5b506100e1600480360360408110156100cb57600080fd5b50600160a060020a0381351690602001356102dd565b604080519115158252519081900360200190f35b34801561010157600080fd5b5061010a6102f3565b60408051918252519081900360200190f35b34801561012857600080fd5b506100e16004803603606081101561013f57600080fd5b50600160a060020a038135811691602081013590911690604001356102f9565b34801561016b57600080fd5b506100e16004803603604081101561018257600080fd5b50600160a060020a038135169060200135610350565b3480156101a457600080fd5b506101c2600480360360208110156101bb57600080fd5b503561038c565b005b3480156101d057600080fd5b5061010a600480360360208110156101e757600080fd5b5035600160a060020a0316610399565b34801561020357600080fd5b506101c26004803603604081101561021a57600080fd5b50600160a060020a0381351690602001356103b4565b34801561023c57600080fd5b506100e16004803603604081101561025357600080fd5b50600160a060020a0381351690602001356103c2565b34801561027557600080fd5b506100e16004803603604081101561028c57600080fd5b50600160a060020a0381351690602001356103fe565b3480156102ae57600080fd5b5061010a600480360360408110156102c557600080fd5b50600160a060020a038135811691602001351661040b565b60006102ea338484610436565b50600192915050565b60025490565b60006103068484846105a3565b600160a060020a038416600090815260016020908152604080832033808552925290912054610346918691610341908663ffffffff61076716565b610436565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102ea918590610341908663ffffffff6107c716565b610396338261082b565b50565b600160a060020a031660009081526020819052604090205490565b6103be8282610945565b5050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102ea918590610341908663ffffffff61076716565b60006102ea3384846105a3565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03831615156104bb576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610541576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383161515610629576040805160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156106af576040805160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152602081905260409020546106d8908263ffffffff61076716565b600160a060020a03808516600090815260208190526040808220939093559084168152205461070d908263ffffffff6107c716565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107c1576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610824576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a03821615156108b1576040805160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6002546108c4908263ffffffff61076716565b600255600160a060020a0382166000908152602081905260409020546108f0908263ffffffff61076716565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b61094f828261082b565b600160a060020a0382166000908152600160209081526040808320338085529252909120546103be918491610341908563ffffffff6107671656fea165627a7a72305820eac7cca2272fe806a9048042f2b68f8971485149ddb528efc6d81f8a277a1ce70029",
  "sourceMap": "257:380:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;257:380:5;;;;;;;",
  "deployedSourceMap": "257:380:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:145:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2445:145:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2445:145:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1506:89:4;;;;;;;;;;;;;;;;;;;;3047:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3047:252:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3047:252:4;;;;;;;;;;;;;;;;;;3694:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3694:203:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3694:203:4;;;;;;;;;398:79:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;398:79:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;398:79:5;;;;;1653:108:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1653:108:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1653:108:4;-1:-1:-1;;;;;1653:108:4;;;534:101:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;534:101:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;534:101:5;;;;;;;;;4384:213:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4384:213:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4384:213:4;;;;;;;;;1964:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1964:153:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1964:153:4;;;;;;;;;2175:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2175:132:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2175:132:4;;;;;;;;;;;2445:145;2510:4;2526:36;2535:10;2547:7;2556:5;2526:8;:36::i;:::-;-1:-1:-1;2579:4:4;2445:145;;;;:::o;1506:89::-;1576:12;;1506:89;:::o;3047:252::-;3136:4;3152:36;3162:6;3170:9;3181:6;3152:9;:36::i;:::-;-1:-1:-1;;;;;3227:19:4;;;;;;:11;:19;;;;;;;;3215:10;3227:31;;;;;;;;;3198:73;;3207:6;;3227:43;;3263:6;3227:43;:35;:43;:::i;:::-;3198:8;:73::i;:::-;-1:-1:-1;3288:4:4;3047:252;;;;;:::o;3694:203::-;3799:10;3774:4;3820:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3820:32:4;;;;;;;;;;3774:4;;3790:79;;3811:7;;3820:48;;3857:10;3820:48;:36;:48;:::i;398:79:5:-;445:25;451:10;463:6;445:5;:25::i;:::-;398:79;:::o;1653:108:4:-;-1:-1:-1;;;;;1736:18:4;1710:7;1736:18;;;;;;;;;;;;1653:108::o;534:101:5:-;602:26;612:7;621:6;602:9;:26::i;:::-;534:101;;:::o;4384:213:4:-;4494:10;4469:4;4515:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4515:32:4;;;;;;;;;;4469:4;;4485:84;;4506:7;;4515:53;;4552:15;4515:53;:36;:53;:::i;1964:153::-;2033:4;2049:40;2059:10;2071:9;2082:6;2049:9;:40::i;2175:132::-;-1:-1:-1;;;;;2273:18:4;;;2247:7;2273:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2175:132::o;7109:329::-;-1:-1:-1;;;;;7201:19:4;;;;7193:68;;;;;-1:-1:-1;;;;;7193:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7279:21:4;;;;7271:68;;;;;-1:-1:-1;;;;;7271:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7350:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7400:31;;;;;;;;;;;;;;;;;7109:329;;;:::o;5071:422::-;-1:-1:-1;;;;;5168:20:4;;;;5160:70;;;;;-1:-1:-1;;;;;5160:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5248:23:4;;;;5240:71;;;;;-1:-1:-1;;;;;5240:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5342:17:4;;:9;:17;;;;;;;;;;;:29;;5364:6;5342:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5322:17:4;;;:9;:17;;;;;;;;;;;:49;;;;5404:20;;;;;;;:32;;5429:6;5404:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5381:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;5451:35;;;;;;;5381:20;;5451:35;;;;;;;;;;;;;5071:422;;;:::o;1274:179:23:-;1332:7;1359:6;;;;1351:49;;;;;-1:-1:-1;;;;;1351:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:23;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:23:o;6384:300:4:-;-1:-1:-1;;;;;6458:21:4;;;;6450:67;;;;;-1:-1:-1;;;;;6450:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6543:12;;:23;;6560:5;6543:23;:16;:23;:::i;:::-;6528:12;:38;-1:-1:-1;;;;;6597:18:4;;:9;:18;;;;;;;;;;;:29;;6620:5;6597:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6576:18:4;;:9;:18;;;;;;;;;;;:50;;;;6641:36;;;;;;;6576:9;;6641:36;;;;;;;;;;;6384:300;;:::o;7615:185::-;7686:22;7692:7;7701:6;7686:5;:22::i;:::-;-1:-1:-1;;;;;7748:20:4;;;;;;:11;:20;;;;;;;;7736:10;7748:32;;;;;;;;;7718:75;;7727:7;;7748:44;;7785:6;7748:44;:36;:44;:::i",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of `ERC20` that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\ncontract ERC20Burnable is ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See `ERC20._burn`.\n     */\n    function burn(uint256 amount) public {\n        _burn(msg.sender, amount);\n    }\n\n    /**\n     * @dev See `ERC20._burnFrom`.\n     */\n    function burnFrom(address account, uint256 amount) public {\n        _burnFrom(account, amount);\n    }\n}",
  "sourcePath": "E:/Task_space/Elena/2Backend/contracts/ERC20Burnable.sol",
  "ast": {
    "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20Burnable.sol",
    "exportedSymbols": {
      "ERC20Burnable": [
        862
      ]
    },
    "id": 863,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 833,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 834,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 832,
        "src": "25:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 835,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 831,
              "src": "283:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$831",
                "typeString": "contract ERC20"
              }
            },
            "id": 836,
            "nodeType": "InheritanceSpecifier",
            "src": "283:5:5"
          }
        ],
        "contractDependencies": [
          831,
          1355
        ],
        "contractKind": "contract",
        "documentation": "@dev Extension of `ERC20` that allows token holders to destroy both their own\ntokens and those that they have an allowance for, in a way that can be\nrecognized off-chain (via event analysis).",
        "fullyImplemented": true,
        "id": 862,
        "linearizedBaseContracts": [
          862,
          831,
          1355
        ],
        "name": "ERC20Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 847,
              "nodeType": "Block",
              "src": "435:42:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5208,
                          "src": "451:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "451:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 844,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "463:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 841,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "445:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "445:25:5"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from the caller.\n     * See `ERC20._burn`.",
            "id": 848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "412:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:16:5"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:5"
            },
            "scope": 862,
            "src": "398:79:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "592:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "612:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "621:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 855,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "602:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "602:26:5"
                }
              ]
            },
            "documentation": "@dev See `ERC20._burnFrom`.",
            "id": 861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "552:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 852,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "569:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:33:5"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:5"
            },
            "scope": 862,
            "src": "534:101:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 863,
        "src": "257:380:5"
      }
    ],
    "src": "0:637:5"
  },
  "legacyAST": {
    "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20Burnable.sol",
    "exportedSymbols": {
      "ERC20Burnable": [
        862
      ]
    },
    "id": 863,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 833,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 834,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 832,
        "src": "25:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 835,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 831,
              "src": "283:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$831",
                "typeString": "contract ERC20"
              }
            },
            "id": 836,
            "nodeType": "InheritanceSpecifier",
            "src": "283:5:5"
          }
        ],
        "contractDependencies": [
          831,
          1355
        ],
        "contractKind": "contract",
        "documentation": "@dev Extension of `ERC20` that allows token holders to destroy both their own\ntokens and those that they have an allowance for, in a way that can be\nrecognized off-chain (via event analysis).",
        "fullyImplemented": true,
        "id": 862,
        "linearizedBaseContracts": [
          862,
          831,
          1355
        ],
        "name": "ERC20Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 847,
              "nodeType": "Block",
              "src": "435:42:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5208,
                          "src": "451:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "451:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 844,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "463:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 841,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "445:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "445:25:5"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from the caller.\n     * See `ERC20._burn`.",
            "id": 848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "412:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:16:5"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:5"
            },
            "scope": 862,
            "src": "398:79:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "592:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "612:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 857,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "621:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 855,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "602:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "602:26:5"
                }
              ]
            },
            "documentation": "@dev See `ERC20._burnFrom`.",
            "id": 861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "552:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 852,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "569:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "551:33:5"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:5"
            },
            "scope": 862,
            "src": "534:101:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 863,
        "src": "257:380:5"
      }
    ],
    "src": "0:637:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-02-02T16:12:09.416Z",
  "devdoc": {
    "details": "Extension of `ERC20` that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See `ERC20._burn`."
      },
      "burnFrom(address,uint256)": {
        "details": "See `ERC20._burnFrom`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}