{
  "contractName": "OEToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "partners",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "_partners",
          "type": "address[]"
        },
        {
          "name": "_shares",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "partnerID",
          "type": "uint256"
        }
      ],
      "name": "getMyShare",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shares\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"partnerID\",\"type\":\"uint256\"}],\"name\":\"getMyShare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"partners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"_partners\",\"type\":\"address[]\"},{\"name\":\"_shares\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/E/Task_space/Elena/2Backend/contracts/OEToken.sol\":\"OEToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Task_space/Elena/2Backend/contracts/ERC20.sol\":{\"keccak256\":\"0x75929a878fc5f9587643b6877e472ed72b820b7f2e5bd7a91d3be30aab5e54c8\",\"urls\":[\"bzzr://111073a43a067a152575dce577b2163556009592733e06ef26f0a5ab53e64c05\"]},\"/E/Task_space/Elena/2Backend/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xc7cf02299e428c0eac88b9e98a3d3b92686c8f5458f5446fa8084d67d3a6d848\",\"urls\":[\"bzzr://70c2068f503363a12a7a755e5ad3b062271d339c18a8fc625928bb2ea3b9b5f0\"]},\"/E/Task_space/Elena/2Backend/contracts/ERC20Mintable.sol\":{\"keccak256\":\"0xc75c9426051d49bbed782a3beb2f92e6c927b4ce94721ba172eb9d9afc0fb85f\",\"urls\":[\"bzzr://10669f85cb254906beeb282a92d2c30c2a88265a5213cfae035ccec431f8a46c\"]},\"/E/Task_space/Elena/2Backend/contracts/IERC20.sol\":{\"keccak256\":\"0x5b185339d0d372fc6ce6fcc1b57bd9bdc893026ba43745bf00de23cc9605595b\",\"urls\":[\"bzzr://2eea795b0c3b747f996d59cb1fa32d9e6801184a061bb9b0a8bc5ae0b2d87797\"]},\"/E/Task_space/Elena/2Backend/contracts/MinterRole.sol\":{\"keccak256\":\"0xf3fbae580cb16cf4c35e993e5f25e1816ded8d9e63a7cbfc8e8e212393980cb1\",\"urls\":[\"bzzr://87c5b0165ff52de0365995336c7d5b6fbbfee335eb52a47d3d035a4a6ec00746\"]},\"/E/Task_space/Elena/2Backend/contracts/OEToken.sol\":{\"keccak256\":\"0x3de2ca40b58205f89dbe514377262fbe94e40f483bdf0f667e497a15c442b10a\",\"urls\":[\"bzzr://6fd68bfabe49cbefa703661d21d68cbdc79bc9161fc2659441d24b1e4c446e00\"]},\"/E/Task_space/Elena/2Backend/contracts/Roles.sol\":{\"keccak256\":\"0xa50ddbc5b9ea8b02a31de3cd8aae5d480042afe450f10bdee85bb762ebfd4d6a\",\"urls\":[\"bzzr://74093f55c6aed5f5afb7d58ff00fa0dcbbe11d092074316ac7541ae78213c4a4\"]},\"/E/Task_space/Elena/2Backend/contracts/SafeMath.sol\":{\"keccak256\":\"0xf569fc2f5b2aeab257caf413966746a267fe7e478e3226ae877d249de77b91c6\",\"urls\":[\"bzzr://10615c37e61357ee71ecde7ea9a688e770a88fee20cfddfc9bce43203e971b32\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200166238038062001662833981018060405260a08110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50506020820151604090920180519194929391640100000000811115620000f157600080fd5b820160208101848111156200010557600080fd5b81518560208202830111640100000000821117156200012357600080fd5b505092919060200180516401000000008111156200014057600080fd5b820160208101848111156200015457600080fd5b81518560208202830111640100000000821117156200017257600080fd5b5050929190505050848484620001973362000210640100000000026401000000009004565b8251620001ac906005906020860190620003c9565b508151620001c2906006906020850190620003c9565b506007805460ff191660ff9290921691909117905550508151620001ee9060089060208501906200044e565b50805162000204906009906020840190620004b4565b50505050505062000538565b6200022b60038264010000000062000fb76200026282021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b62000277828264010000000062000309810204565b15620002e457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a0382161515620003a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200040c57805160ff19168380011785556200043c565b828001600101855582156200043c579182015b828111156200043c5782518255916020019190600101906200041f565b506200044a929150620004f1565b5090565b828054828255906000526020600020908101928215620004a6579160200282015b82811115620004a65782518254600160a060020a031916600160a060020a039091161782556020909201916001909101906200046f565b506200044a92915062000511565b8280548282559060005260206000209081019282156200043c57916020028201828111156200043c5782518255916020019190600101906200041f565b6200050e91905b808211156200044a5760008155600101620004f8565b90565b6200050e91905b808211156200044a578054600160a060020a031916815560010162000518565b61111a80620005486000396000f3fe6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610100578063095ea7b31461018a57806318160ddd146101d757806323b872dd146101fe578063313ce56714610241578063395093511461026c57806340c10f19146102a557806357a858fc146102de57806359363bca1461030857806370a082311461033457806395d89b4114610367578063983b2d561461037c57806398650275146103af578063a457c2d7146103c4578063a9059cbb146103fd578063aa271e1a14610436578063c3b49d0414610469578063dd62ed3e146104af575b600080fd5b34801561010c57600080fd5b506101156104ea565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014f578181015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019657600080fd5b506101c3600480360360408110156101ad57600080fd5b50600160a060020a038135169060200135610580565b604080519115158252519081900360200190f35b3480156101e357600080fd5b506101ec610596565b60408051918252519081900360200190f35b34801561020a57600080fd5b506101c36004803603606081101561022157600080fd5b50600160a060020a0381358116916020810135909116906040013561059c565b34801561024d57600080fd5b506102566105f3565b6040805160ff9092168252519081900360200190f35b34801561027857600080fd5b506101c36004803603604081101561028f57600080fd5b50600160a060020a0381351690602001356105fc565b3480156102b157600080fd5b506101c3600480360360408110156102c857600080fd5b50600160a060020a038135169060200135610638565b3480156102ea57600080fd5b506101ec6004803603602081101561030157600080fd5b50356106c9565b34801561031457600080fd5b506103326004803603602081101561032b57600080fd5b50356106e8565b005b34801561034057600080fd5b506101ec6004803603602081101561035757600080fd5b5035600160a060020a03166107cb565b34801561037357600080fd5b506101156107e6565b34801561038857600080fd5b506103326004803603602081101561039f57600080fd5b5035600160a060020a0316610847565b3480156103bb57600080fd5b506103326108d5565b3480156103d057600080fd5b506101c3600480360360408110156103e757600080fd5b50600160a060020a0381351690602001356108e0565b34801561040957600080fd5b506101c36004803603604081101561042057600080fd5b50600160a060020a03813516906020013561091c565b34801561044257600080fd5b506101c36004803603602081101561045957600080fd5b5035600160a060020a0316610929565b34801561047557600080fd5b506104936004803603602081101561048c57600080fd5b5035610942565b60408051600160a060020a039092168252519081900360200190f35b3480156104bb57600080fd5b506101ec600480360360408110156104d257600080fd5b50600160a060020a038135811691602001351661096a565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105765780601f1061054b57610100808354040283529160200191610576565b820191906000526020600020905b81548152906001019060200180831161055957829003601f168201915b5050505050905090565b600061058d338484610995565b50600192915050565b60025490565b60006105a9848484610b02565b600160a060020a0384166000908152600160209081526040808320338085529252909120546105e99186916105e4908663ffffffff610cc616565b610995565b5060019392505050565b60075460ff1690565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161058d9185906105e4908663ffffffff610d2616565b600061064333610929565b15156106bf576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b61058d8383610d8a565b60098054829081106106d757fe5b600091825260209091200154905081565b60088054829081106106f657fe5b600091825260209091200154600160a060020a0316331461071657600080fd5b600a600060088381548110151561072957fe5b6000918252602080832090910154600160a060020a0316835282019290925260400190205460ff161561075b57600080fd5b6001600a600060088481548110151561077057fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff1916911515919091179055600980546107c8913391849081106107b857fe5b9060005260206000200154610d8a565b50565b600160a060020a031660009081526020819052604090205490565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105765780601f1061054b57610100808354040283529160200191610576565b61085033610929565b15156108cc576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b6107c881610e7f565b6108de33610ec7565b565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161058d9185906105e4908663ffffffff610cc616565b600061058d338484610b02565b600061093c60038363ffffffff610f0f16565b92915050565b600880548290811061095057fe5b600091825260209091200154600160a060020a0316905081565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a0383161515610a1a576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610aa0576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383161515610b88576040805160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610c0e576040805160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038316600090815260208190526040902054610c37908263ffffffff610cc616565b600160a060020a038085166000908152602081905260408082209390935590841681522054610c6c908263ffffffff610d2616565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610d20576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610d83576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610dea576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610dfd908263ffffffff610d2616565b600255600160a060020a038216600090815260208190526040902054610e29908263ffffffff610d2616565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610e9060038263ffffffff610fb716565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610ed860038263ffffffff61103b16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610f97576040805160e560020a62461bcd02815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610fc18282610f0f565b15611016576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6110458282610f0f565b15156110c1576040805160e560020a62461bcd02815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60448201527f6500000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0316600090815260208281526040808320805460ff19169055600190930190529081205556fea165627a7a72305820cba39ede35b34a1447988ceb7425e89668ecbc349e952099655407641dc01a7c0029",
  "deployedBytecode": "0x6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610100578063095ea7b31461018a57806318160ddd146101d757806323b872dd146101fe578063313ce56714610241578063395093511461026c57806340c10f19146102a557806357a858fc146102de57806359363bca1461030857806370a082311461033457806395d89b4114610367578063983b2d561461037c57806398650275146103af578063a457c2d7146103c4578063a9059cbb146103fd578063aa271e1a14610436578063c3b49d0414610469578063dd62ed3e146104af575b600080fd5b34801561010c57600080fd5b506101156104ea565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014f578181015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019657600080fd5b506101c3600480360360408110156101ad57600080fd5b50600160a060020a038135169060200135610580565b604080519115158252519081900360200190f35b3480156101e357600080fd5b506101ec610596565b60408051918252519081900360200190f35b34801561020a57600080fd5b506101c36004803603606081101561022157600080fd5b50600160a060020a0381358116916020810135909116906040013561059c565b34801561024d57600080fd5b506102566105f3565b6040805160ff9092168252519081900360200190f35b34801561027857600080fd5b506101c36004803603604081101561028f57600080fd5b50600160a060020a0381351690602001356105fc565b3480156102b157600080fd5b506101c3600480360360408110156102c857600080fd5b50600160a060020a038135169060200135610638565b3480156102ea57600080fd5b506101ec6004803603602081101561030157600080fd5b50356106c9565b34801561031457600080fd5b506103326004803603602081101561032b57600080fd5b50356106e8565b005b34801561034057600080fd5b506101ec6004803603602081101561035757600080fd5b5035600160a060020a03166107cb565b34801561037357600080fd5b506101156107e6565b34801561038857600080fd5b506103326004803603602081101561039f57600080fd5b5035600160a060020a0316610847565b3480156103bb57600080fd5b506103326108d5565b3480156103d057600080fd5b506101c3600480360360408110156103e757600080fd5b50600160a060020a0381351690602001356108e0565b34801561040957600080fd5b506101c36004803603604081101561042057600080fd5b50600160a060020a03813516906020013561091c565b34801561044257600080fd5b506101c36004803603602081101561045957600080fd5b5035600160a060020a0316610929565b34801561047557600080fd5b506104936004803603602081101561048c57600080fd5b5035610942565b60408051600160a060020a039092168252519081900360200190f35b3480156104bb57600080fd5b506101ec600480360360408110156104d257600080fd5b50600160a060020a038135811691602001351661096a565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105765780601f1061054b57610100808354040283529160200191610576565b820191906000526020600020905b81548152906001019060200180831161055957829003601f168201915b5050505050905090565b600061058d338484610995565b50600192915050565b60025490565b60006105a9848484610b02565b600160a060020a0384166000908152600160209081526040808320338085529252909120546105e99186916105e4908663ffffffff610cc616565b610995565b5060019392505050565b60075460ff1690565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161058d9185906105e4908663ffffffff610d2616565b600061064333610929565b15156106bf576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b61058d8383610d8a565b60098054829081106106d757fe5b600091825260209091200154905081565b60088054829081106106f657fe5b600091825260209091200154600160a060020a0316331461071657600080fd5b600a600060088381548110151561072957fe5b6000918252602080832090910154600160a060020a0316835282019290925260400190205460ff161561075b57600080fd5b6001600a600060088481548110151561077057fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff1916911515919091179055600980546107c8913391849081106107b857fe5b9060005260206000200154610d8a565b50565b600160a060020a031660009081526020819052604090205490565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105765780601f1061054b57610100808354040283529160200191610576565b61085033610929565b15156108cc576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b6107c881610e7f565b6108de33610ec7565b565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161058d9185906105e4908663ffffffff610cc616565b600061058d338484610b02565b600061093c60038363ffffffff610f0f16565b92915050565b600880548290811061095057fe5b600091825260209091200154600160a060020a0316905081565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a0383161515610a1a576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610aa0576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383161515610b88576040805160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610c0e576040805160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038316600090815260208190526040902054610c37908263ffffffff610cc616565b600160a060020a038085166000908152602081905260408082209390935590841681522054610c6c908263ffffffff610d2616565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610d20576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610d83576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610dea576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610dfd908263ffffffff610d2616565b600255600160a060020a038216600090815260208190526040902054610e29908263ffffffff610d2616565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610e9060038263ffffffff610fb716565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610ed860038263ffffffff61103b16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610f97576040805160e560020a62461bcd02815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610fc18282610f0f565b15611016576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6110458282610f0f565b15156110c1576040805160e560020a62461bcd02815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60448201527f6500000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0316600090815260208281526040808320805460ff19169055600190930190529081205556fea165627a7a72305820cba39ede35b34a1447988ceb7425e89668ecbc349e952099655407641dc01a7c0029",
  "sourceMap": "86:639:15:-;;;234:229;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:229:15;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;234:229:15;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;234:229:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;234:229:15;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;234:229:15;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;234:229:15;;;;;;367:5;373:7;381:8;274:22:14;285:10;274;;;:22;;;:::i;:::-;504:12:6;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;526:16:6;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:6;:20;;-1:-1:-1;;552:20:6;;;;;;;;;;;;-1:-1:-1;;409:20:15;;;;:8;;:20;;;;;:::i;:::-;-1:-1:-1;439:16:15;;;;:6;;:16;;;;;:::i;:::-;;234:229;;;;;86:639;;736:119:14;792:21;:8;805:7;792:12;;;;;;:21;:::i;:::-;828:20;;-1:-1:-1;;;;;828:20:14;;;;;;;;736:119;:::o;599:184:21:-;676:18;680:4;686:7;676:3;;;;:18;:::i;:::-;675:19;667:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;740:20:21;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;740:27:21;763:4;740:27;;;599:184::o;1159:200::-;1231:4;-1:-1:-1;;;;;1255:21:21;;;;1247:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1332:20:21;:11;:20;;;;;;;;;;;;;;;1159:200::o;86:639:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;86:639:15;;;-1:-1:-1;86:639:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;86:639:15;-1:-1:-1;;;;;86:639:15;;;;;;;;;;;-1:-1:-1;86:639:15;;;;;;;-1:-1:-1;86:639:15;;;-1:-1:-1;86:639:15;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;86:639:15;;;;;;;;;;;;;;",
  "deployedSourceMap": "86:639:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;644:81:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:145:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2445:145:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2445:145:4;;-1:-1:-1;;;;;2445:145:4;;;;;;;;;;;;;;;;;;;;;;;;;1506:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1506:89:4;;;;;;;;;;;;;;;;;;;;3047:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3047:252:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3047:252:4;;;;;;;;;;;;;;;;;;1478:81:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1478:81:6;;;;;;;;;;;;;;;;;;;;;;;3694:203:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3694:203:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3694:203:4;;-1:-1:-1;;;;;3694:203:4;;;;;;;485:140:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;485:140:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;485:140:7;;-1:-1:-1;;;;;485:140:7;;;;;;;170:20:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;170:20:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;170:20:15;;;469:254;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:254:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;469:254:15;;;;;1653:108:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1653:108:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1653:108:4;-1:-1:-1;;;;;1653:108:4;;;838:85:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:85:6;;;;559:90:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:90:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;559:90:14;-1:-1:-1;;;;;559:90:14;;;655:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;655:75:14;;;;4384:213:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4384:213:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4384:213:4;;-1:-1:-1;;;;;4384:213:4;;;;;;;1964:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1964:153:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1964:153:4;;-1:-1:-1;;;;;1964:153:4;;;;;;;446:107:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;446:107:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;446:107:14;-1:-1:-1;;;;;446:107:14;;;139:25:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:25:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;139:25:15;;;;;;;-1:-1:-1;;;;;139:25:15;;;;;;;;;;;;;;2175:132:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2175:132:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2175:132:4;;;;;;;;;;;644:81:6;713:5;706:12;;;;;;;;;;;;;-1:-1:-1;;706:12:6;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2445:145:4:-;2510:4;2526:36;2535:10;2547:7;2556:5;2526:8;:36::i;:::-;-1:-1:-1;2579:4:4;2445:145;;;;:::o;1506:89::-;1576:12;;1506:89;:::o;3047:252::-;3136:4;3152:36;3162:6;3170:9;3181:6;3152:9;:36::i;:::-;-1:-1:-1;;;;;3227:19:4;;;;;;-1:-1:-1;3227:19:4;;;;;;;;3215:10;3227:31;;;;;;;;;3198:73;;3227:19;;:43;;3263:6;3227:35;:43::i;:::-;3198:8;:73::i;:::-;-1:-1:-1;3288:4:4;3047:252;;;;;:::o;1478:81:6:-;1543:9;;;;1478:81;:::o;3694:203:4:-;3799:10;3774:4;3820:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3820:32:4;;;;;;;;;;3774:4;;3790:79;;3820:32;;:48;;3857:10;3820:36;:48::i;485:140:7:-;559:4;349:20:14;358:10;349:8;:20::i;:::-;341:81;;;;;;;-1:-1:-1;;;;;341:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:22:7;581:7;590:6;575:5;:22::i;170:20:15:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;170:20:15;:::o;469:254::-;542:8;:19;;551:9;;542:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;542:19:15;530:10;:31;522:40;;;;;;580:8;:29;589:8;598:9;589:19;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;589:19:15;580:29;;;;;;;;;;;;;;;:36;572:45;;;;;;666:4;636:8;:29;645:8;654:9;645:19;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;645:19:15;636:29;;;;;;;;;;;;:34;;-1:-1:-1;;636:34:15;;;;;;;;;;698:6;:17;;680:36;;686:10;;705:9;;698:17;;;;;;;;;;;;;;680:5;:36::i;:::-;469:254;:::o;1653:108:4:-;-1:-1:-1;;;;;1736:18:4;1710:7;1736:18;;;;;;;;;;;;1653:108::o;838:85:6:-;909:7;902:14;;;;;;;;;;;;;-1:-1:-1;;902:14:6;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;559:90:14;349:20;358:10;349:8;:20::i;:::-;341:81;;;;;;;-1:-1:-1;;;;;341:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:19;634:7;623:10;:19::i;655:75::-;698:25;712:10;698:13;:25::i;:::-;655:75::o;4384:213:4:-;4494:10;4469:4;4515:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4515:32:4;;;;;;;;;;4469:4;;4485:84;;4515:32;;:53;;4552:15;4515:36;:53::i;1964:153::-;2033:4;2049:40;2059:10;2071:9;2082:6;2049:9;:40::i;446:107:14:-;502:4;525:21;:8;538:7;525:21;:12;:21;:::i;:::-;518:28;446:107;-1:-1:-1;;446:107:14:o;139:25:15:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;139:25:15;;-1:-1:-1;139:25:15;:::o;2175:132:4:-;-1:-1:-1;;;;;2273:18:4;;;2247:7;2273:18;;;-1:-1:-1;2273:18:4;;;;;;;;:27;;;;;;;;;;;;;2175:132::o;7109:329::-;-1:-1:-1;;;;;7201:19:4;;;;7193:68;;;;;-1:-1:-1;;;;;7193:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7279:21:4;;;;7271:68;;;;;-1:-1:-1;;;;;7271:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7350:18:4;;;;;;;-1:-1:-1;7350:18:4;;;;;;;;:27;;;;;;;;;;;;;:35;;;7400:31;;;;;;;;;;;;;;;;;7109:329;;;:::o;5071:422::-;-1:-1:-1;;;;;5168:20:4;;;;5160:70;;;;;-1:-1:-1;;;;;5160:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5248:23:4;;;;5240:71;;;;;-1:-1:-1;;;;;5240:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5342:17:4;;:9;:17;;;;;;;;;;;:29;;5364:6;5342:21;:29::i;:::-;-1:-1:-1;;;;;5322:17:4;;;:9;:17;;;;;;;;;;;:49;;;;5404:20;;;;;;;:32;;5429:6;5404:24;:32::i;:::-;-1:-1:-1;;;;;5381:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;5451:35;;;;;;;5381:20;;5451:35;;;;;;;;;;;;;5071:422;;;:::o;1274:179:23:-;1332:7;1359:6;;;;1351:49;;;;;-1:-1:-1;;;;;1351:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:23;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:23:o;5763:302:4:-;-1:-1:-1;;;;;5838:21:4;;;;5830:65;;;;;-1:-1:-1;;;;;5830:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;5921:12;;:24;;5938:6;5921:24;:16;:24;:::i;:::-;5906:12;:39;-1:-1:-1;;;;;5976:18:4;;:9;:18;;;;;;;;;;;:30;;5999:6;5976:22;:30::i;:::-;-1:-1:-1;;;;;5955:18:4;;:9;:18;;;;;;;;;;;:51;;;;6021:37;;;;;;;5955:18;;:9;;6021:37;;;;;;;;;;5763:302;;:::o;736:119:14:-;792:21;:8;805:7;792:21;:12;:21;:::i;:::-;828:20;;-1:-1:-1;;;;;828:20:14;;;;;;;;736:119;:::o;861:127::-;920:24;:8;936:7;920:24;:15;:24;:::i;:::-;959:22;;-1:-1:-1;;;;;959:22:14;;;;;;;;861:127;:::o;1159:200:21:-;1231:4;-1:-1:-1;;;;;1255:21:21;;;;1247:68;;;;;-1:-1:-1;;;;;1247:68:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1332:20:21;:11;:20;;;;;;;;;;;;;;;1159:200::o;599:184::-;676:18;680:4;686:7;676:3;:18::i;:::-;675:19;667:63;;;;;-1:-1:-1;;;;;667:63:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;740:20:21;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;740:27:21;-1:-1:-1;740:27:21;;;599:184::o;858:212::-;937:18;941:4;947:7;937:3;:18::i;:::-;929:64;;;;;;;-1:-1:-1;;;;;929:64:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1003:20:21;1026:5;1003:20;;;;;;;;;;;:28;;-1:-1:-1;;1003:28:21;;;-1:-1:-1;1041:11:21;;;:20;;;;;:22;858:212::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC20Mintable.sol\";\nimport \"./ERC20Detailed.sol\";\n\ncontract OEToken is ERC20Mintable,ERC20Detailed{\n    address[] public partners;\n    uint[] public shares;\n    mapping(address=>bool) redeemed;\n\n    constructor(string memory _name,string memory _symbol,uint8 decimals,address[] memory _partners,uint[] memory _shares) ERC20Detailed(_name,_symbol,decimals) public {\n\n        partners = _partners;\n        shares = _shares;\n\n    }\n\n    function getMyShare(uint partnerID) public {\n        require(msg.sender==partners[partnerID]);\n        require(redeemed[partners[partnerID]]==false);\n        \n        redeemed[partners[partnerID]]=true;\n        _mint(msg.sender, shares[partnerID]);\n    }\n}",
  "sourcePath": "E:\\Task_space\\Elena\\2Backend\\contracts\\OEToken.sol",
  "ast": {
    "absolutePath": "/E/Task_space/Elena/2Backend/contracts/OEToken.sol",
    "exportedSymbols": {
      "OEToken": [
        1748
      ]
    },
    "id": 1749,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1661,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 1662,
        "nodeType": "ImportDirective",
        "scope": 1749,
        "sourceUnit": 949,
        "src": "25:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20Detailed.sol",
        "file": "./ERC20Detailed.sol",
        "id": 1663,
        "nodeType": "ImportDirective",
        "scope": 1749,
        "sourceUnit": 921,
        "src": "55:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1664,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 948,
              "src": "106:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$948",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 1665,
            "nodeType": "InheritanceSpecifier",
            "src": "106:13:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1666,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 920,
              "src": "120:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$920",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1667,
            "nodeType": "InheritanceSpecifier",
            "src": "120:13:15"
          }
        ],
        "contractDependencies": [
          831,
          920,
          948,
          1355,
          1659
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1748,
        "linearizedBaseContracts": [
          1748,
          920,
          948,
          1659,
          831,
          1355
        ],
        "name": "OEToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1670,
            "name": "partners",
            "nodeType": "VariableDeclaration",
            "scope": 1748,
            "src": "139:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1668,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "139:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1669,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "139:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1673,
            "name": "shares",
            "nodeType": "VariableDeclaration",
            "scope": 1748,
            "src": "170:20:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1671,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "170:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1672,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "170:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1677,
            "name": "redeemed",
            "nodeType": "VariableDeclaration",
            "scope": 1748,
            "src": "196:31:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1676,
              "keyType": {
                "id": 1674,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "196:22:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1675,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "213:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1705,
              "nodeType": "Block",
              "src": "398:65:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1697,
                      "name": "partners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "409:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1698,
                      "name": "_partners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1686,
                      "src": "420:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "409:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "409:20:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1701,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1673,
                      "src": "439:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1702,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "448:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "439:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 1704,
                  "nodeType": "ExpressionStatement",
                  "src": "439:16:15"
                }
              ]
            },
            "documentation": null,
            "id": 1706,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1692,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1679,
                    "src": "367:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1693,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1681,
                    "src": "373:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1694,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1683,
                    "src": "381:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1691,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 920,
                  "src": "353:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$920_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "353:37:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1679,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "246:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "266:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "288:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1686,
                  "name": "_partners",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "303:26:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1684,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "303:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1685,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "303:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1689,
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "330:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1687,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "330:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1688,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "330:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:107:15"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "398:0:15"
            },
            "scope": 1748,
            "src": "234:229:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1746,
              "nodeType": "Block",
              "src": "512:211:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1712,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5208,
                            "src": "530:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "530:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1714,
                            "name": "partners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "542:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1716,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1715,
                            "name": "partnerID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1708,
                            "src": "551:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "542:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "530:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5211,
                        5212
                      ],
                      "referencedDeclaration": 5211,
                      "src": "522:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "522:40:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "522:40:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1721,
                            "name": "redeemed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1677,
                            "src": "580:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1725,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1722,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "589:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1724,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1723,
                              "name": "partnerID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1708,
                              "src": "598:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "589:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "580:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "611:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "580:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5211,
                        5212
                      ],
                      "referencedDeclaration": 5211,
                      "src": "572:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "572:45:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1729,
                  "nodeType": "ExpressionStatement",
                  "src": "572:45:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1730,
                        "name": "redeemed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "636:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1734,
                      "indexExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1731,
                          "name": "partners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1670,
                          "src": "645:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1733,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1732,
                          "name": "partnerID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1708,
                          "src": "654:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "645:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "636:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "666:4:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "636:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "636:34:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5208,
                          "src": "686:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "686:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1741,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1673,
                          "src": "698:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1743,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1742,
                          "name": "partnerID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1708,
                          "src": "705:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "698:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1738,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "680:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1745,
                  "nodeType": "ExpressionStatement",
                  "src": "680:36:15"
                }
              ]
            },
            "documentation": null,
            "id": 1747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1708,
                  "name": "partnerID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "489:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:16:15"
            },
            "returnParameters": {
              "id": 1710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:0:15"
            },
            "scope": 1748,
            "src": "469:254:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1749,
        "src": "86:639:15"
      }
    ],
    "src": "0:725:15"
  },
  "legacyAST": {
    "absolutePath": "/E/Task_space/Elena/2Backend/contracts/OEToken.sol",
    "exportedSymbols": {
      "OEToken": [
        1748
      ]
    },
    "id": 1749,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1661,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 1662,
        "nodeType": "ImportDirective",
        "scope": 1749,
        "sourceUnit": 949,
        "src": "25:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Task_space/Elena/2Backend/contracts/ERC20Detailed.sol",
        "file": "./ERC20Detailed.sol",
        "id": 1663,
        "nodeType": "ImportDirective",
        "scope": 1749,
        "sourceUnit": 921,
        "src": "55:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1664,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 948,
              "src": "106:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$948",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 1665,
            "nodeType": "InheritanceSpecifier",
            "src": "106:13:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1666,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 920,
              "src": "120:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$920",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1667,
            "nodeType": "InheritanceSpecifier",
            "src": "120:13:15"
          }
        ],
        "contractDependencies": [
          831,
          920,
          948,
          1355,
          1659
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1748,
        "linearizedBaseContracts": [
          1748,
          920,
          948,
          1659,
          831,
          1355
        ],
        "name": "OEToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1670,
            "name": "partners",
            "nodeType": "VariableDeclaration",
            "scope": 1748,
            "src": "139:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1668,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "139:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1669,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "139:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1673,
            "name": "shares",
            "nodeType": "VariableDeclaration",
            "scope": 1748,
            "src": "170:20:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1671,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "170:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1672,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "170:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1677,
            "name": "redeemed",
            "nodeType": "VariableDeclaration",
            "scope": 1748,
            "src": "196:31:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1676,
              "keyType": {
                "id": 1674,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "204:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "196:22:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1675,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "213:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1705,
              "nodeType": "Block",
              "src": "398:65:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1697,
                      "name": "partners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "409:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1698,
                      "name": "_partners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1686,
                      "src": "420:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "409:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "409:20:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1701,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1673,
                      "src": "439:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1702,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "448:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "439:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 1704,
                  "nodeType": "ExpressionStatement",
                  "src": "439:16:15"
                }
              ]
            },
            "documentation": null,
            "id": 1706,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1692,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1679,
                    "src": "367:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1693,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1681,
                    "src": "373:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1694,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1683,
                    "src": "381:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1691,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 920,
                  "src": "353:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$920_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "353:37:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1679,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "246:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "266:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "288:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1686,
                  "name": "_partners",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "303:26:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1684,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "303:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1685,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "303:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1689,
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1706,
                  "src": "330:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1687,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "330:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1688,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "330:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:107:15"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "398:0:15"
            },
            "scope": 1748,
            "src": "234:229:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1746,
              "nodeType": "Block",
              "src": "512:211:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1712,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5208,
                            "src": "530:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "530:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1714,
                            "name": "partners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "542:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1716,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1715,
                            "name": "partnerID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1708,
                            "src": "551:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "542:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "530:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5211,
                        5212
                      ],
                      "referencedDeclaration": 5211,
                      "src": "522:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "522:40:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "522:40:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1721,
                            "name": "redeemed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1677,
                            "src": "580:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1725,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1722,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "589:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1724,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1723,
                              "name": "partnerID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1708,
                              "src": "598:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "589:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "580:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "611:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "580:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5211,
                        5212
                      ],
                      "referencedDeclaration": 5211,
                      "src": "572:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "572:45:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1729,
                  "nodeType": "ExpressionStatement",
                  "src": "572:45:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1730,
                        "name": "redeemed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "636:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1734,
                      "indexExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1731,
                          "name": "partners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1670,
                          "src": "645:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1733,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1732,
                          "name": "partnerID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1708,
                          "src": "654:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "645:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "636:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "666:4:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "636:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "636:34:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5208,
                          "src": "686:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "686:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1741,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1673,
                          "src": "698:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1743,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1742,
                          "name": "partnerID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1708,
                          "src": "705:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "698:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1738,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "680:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1745,
                  "nodeType": "ExpressionStatement",
                  "src": "680:36:15"
                }
              ]
            },
            "documentation": null,
            "id": 1747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1708,
                  "name": "partnerID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "489:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1707,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:16:15"
            },
            "returnParameters": {
              "id": 1710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:0:15"
            },
            "scope": 1748,
            "src": "469:254:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1749,
        "src": "86:639:15"
      }
    ],
    "src": "0:725:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-02-03T03:14:59.003Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}